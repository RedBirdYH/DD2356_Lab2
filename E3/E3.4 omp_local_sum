#include <stdio.h>
#include <stdlib.h>
#include <omp.h>

double omp_local_sum(double *x, size_t size) {
    double global_sum = 0.0;
    #pragma omp parallel num_threads(32)
    {
        double local_sum = 0.0;
        #pragma omp for
        for (size_t i = 0; i < size; i++) {
            local_sum += x[i];
        }
        #pragma omp critical
        global_sum += local_sum;
    }
    return global_sum;
}

void generate_random(double *input, size_t size) {
    for (size_t i = 0; i < size; i++) {
        input[i] = rand() / (double)(RAND_MAX);
    }
}

int main() {
    size_t size = 10000000; // 10^7 elements
    double *array = malloc(size * sizeof(double));
    generate_random(array, size);

    double result = omp_local_sum(array, size);
    printf("Local Sum: %f\n", result);

    free(array);
    return 0;
}
